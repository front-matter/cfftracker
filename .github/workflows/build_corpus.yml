# SPDX-FileCopyrightText: 2021 Stephan Druskat <mail@sdruskat.net>
# SPDX-License-Identifier: CC0-1.0

name: Build CFF corpus
    
on:
  schedule:
    - cron: "10 */09 * * *" # Runs at 10 minutes after every 9th hour
  workflow_dispatch:

jobs:
  query1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up cache
        uses: actions/cache@master
        id: cache
        with:
          path: ${{ env.pythonLocation}}/lib/python3.8/site-packages/*
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Python requirements
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build corpus with query 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if run.py requires passwords..etc, set it as secrets
        run: |
          python query_api_extended.py "https://api.github.com/search/code?q=filename:CITATION.cff+cff-version&per_page=100&accept=application/vnd.github+json"

      - name: Commit updated files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/repositories.json data/cffs/
          git commit -m "Update data from query 1"

      - name: Pull before push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin main --rebase

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

  query2:
    needs: query1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up cache
        uses: actions/cache@master
        id: cache
        with:
          path: ${{ env.pythonLocation}}/lib/python3.8/site-packages/*
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Python requirements
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build corpus with query 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if run.py requires passwords..etc, set it as secrets
        run: |
          python query_api_extended.py "https://api.github.com/search/code?q=filename:CITATION.cff+cff-version&per_page=100&accept=application/vnd.github+json&sort=indexed&order=desc"

      - name: Commit updated files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/repositories.json data/cffs/
          git commit -m "Update data from query 2"

      - name: Pull before push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin main --rebase

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

  query3:
    needs: [query1, query2]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up cache
        uses: actions/cache@master
        id: cache
        with:
          path: ${{ env.pythonLocation}}/lib/python3.8/site-packages/*
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Python requirements
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build corpus with query 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if run.py requires passwords..etc, set it as secrets
        run: |
          python query_api_extended.py "https://api.github.com/search/code?q=filename:CITATION.cff+cff-version&per_page=100&accept=application/vnd.github+json&sort=indexed&order=asc"

      - name: Commit updated files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/repositories.json data/cffs/
          git commit -m "Update data from query 3"

      - name: Pull before push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin main --rebase

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
